{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\n\n// preparing slice of global state\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//  auth inital state\nconst initialAuthState = {\n  isAuthenticated: false\n};\n\n// auth state slice\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login() {}\n  }\n});\n\n// store\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n/*\nreturns an action object of this shape\n{ type: 'some auto generated unique identifier',}\n*/\n// counterSlice.actions.toggleCounter();\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","initialState","login","store","reducer","counterActions","actions"],"sources":["/Users/pamelamladenova/Documents/19 - Redux/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { counter: 0, showCounter: true };\n\n// preparing slice of global state\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n//  auth inital state\nconst initialAuthState = {\n  isAuthenticated: false,\n}\n\n// auth state slice\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login() {\n      \n    }\n  },\n});\n\n// store\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\n/*\nreturns an action object of this shape\n{ type: 'some auto generated unique identifier',}\n*/\n// counterSlice.actions.toggleCounter();\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAE7D;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,mBAAmB,EAAEA,mBAAmB;EACxCK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMW,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;;AAED;AACAhB,WAAW,CAAC;EACVM,IAAI,EAAE,MAAM;EACZW,YAAY,EAAEF,gBAAgB;EAC9BR,QAAQ,EAAE;IACRW,KAAKA,CAAA,EAAG,CAER;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAEf,YAAY,CAACe;AACxB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAAO;AAClD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}