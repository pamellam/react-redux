{"ast":null,"code":"var _jsxFileName = \"/Users/pamelamladenova/Documents/19 - Redux/src/components/Counter.js\";\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { Component } from 'react';\n\n// const Counter = () => {\n//   const dispatch = useDispatch();\n//   const counter = useSelector((state) => state.counter);\n\n//   const incrementHandler = () => {\n//     dispatch({ type: 'INCREMENT' });\n//   };\n\n//   const decrementHandler = () => {\n//     dispatch({ type: 'DECREMENT' });\n//   };\n\n//   const toggleCounterHandler = () => {};\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}> {counter} </div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n//  class based equivalent of\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.incrementHandler = () => {\n      this.props.increment();\n    };\n    this.decrementHandler = () => {\n      this.props.decrement();\n    };\n    this.toggleCounterHandler = () => {};\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: [\" \", this.props.counter, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(),\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: 'INCREMENT'\n    }),\n    decrement: () => dispatch({\n      type: 'DECREMENT'\n    })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"names":["useSelector","useDispatch","connect","classes","Component","jsxDEV","_jsxDEV","Counter","constructor","args","incrementHandler","props","increment","decrementHandler","decrement","toggleCounterHandler","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","bind","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"sources":["/Users/pamelamladenova/Documents/19 - Redux/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch, connect } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { Component } from 'react';\n\n// const Counter = () => {\n//   const dispatch = useDispatch();\n//   const counter = useSelector((state) => state.counter);\n\n//   const incrementHandler = () => {\n//     dispatch({ type: 'INCREMENT' });\n//   };\n\n//   const decrementHandler = () => {\n//     dispatch({ type: 'DECREMENT' });\n//   };\n\n//   const toggleCounterHandler = () => {};\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}> {counter} </div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n//  class based equivalent of\nclass Counter extends Component {\n  incrementHandler = () => {\n    this.props.increment();\n  };\n  decrementHandler = () => {\n    this.props.decrement();\n  };\n\n  toggleCounterHandler = () => {};\n\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}> {this.props.counter} </div>\n        <div>\n          <button onClick={this.incrementHandler.bind()}>Increment</button>\n          <button onClick={this.decrementHandler.bind()}>Decrement</button>\n        </div>\n        <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: 'INCREMENT' }),\n    decrement: () => dispatch({ type: 'DECREMENT' }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,OAAO,QAAQ,aAAa;AAC/D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC9BC,gBAAgB,GAAG,MAAM;MACvB,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC;IACxB,CAAC;IAAA,KACDC,gBAAgB,GAAG,MAAM;MACvB,IAAI,CAACF,KAAK,CAACG,SAAS,CAAC,CAAC;IACxB,CAAC;IAAA,KAEDC,oBAAoB,GAAG,MAAM,CAAC,CAAC;EAAA;EAE/BC,MAAMA,CAAA,EAAG;IACP,oBACEV,OAAA;MAAMW,SAAS,EAAEd,OAAO,CAACe,OAAQ;MAAAC,QAAA,gBAC/Bb,OAAA;QAAAa,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBjB,OAAA;QAAKW,SAAS,EAAEd,OAAO,CAACqB,KAAM;QAAAL,QAAA,GAAC,GAAC,EAAC,IAAI,CAACR,KAAK,CAACO,OAAO,EAAC,GAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3DjB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAQmB,OAAO,EAAE,IAAI,CAACf,gBAAgB,CAACgB,IAAI,CAAC,CAAE;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjEjB,OAAA;UAAQmB,OAAO,EAAE,IAAI,CAACZ,gBAAgB,CAACa,IAAI,CAAC,CAAE;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACNjB,OAAA;QAAQmB,OAAO,EAAE,IAAI,CAACV,oBAAqB;QAAAI,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAEX;AACF;AAEA,MAAMI,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLV,OAAO,EAAEU,KAAK,CAACV;EACjB,CAAC;AACH,CAAC;AAED,MAAMW,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLlB,SAAS,EAAEA,CAAA,KAAMkB,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC;IAChDjB,SAAS,EAAEA,CAAA,KAAMgB,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAY,CAAC;EACjD,CAAC;AACH,CAAC;AACD,eAAe7B,OAAO,CAACyB,eAAe,EAAEE,kBAAkB,CAAC,CAACtB,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}