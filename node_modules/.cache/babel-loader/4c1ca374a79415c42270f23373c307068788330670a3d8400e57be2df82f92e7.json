{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// preparing slice of global state\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.value;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//  returns an action object of this shape { type: 'INCREMENT', value: 1 }\ncounterSlice.actions.toggleCounter;\n\n// create counter reducer\n// function counterReducer(state = initialState, action) {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE_COUNTER') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n\n//   return state;\n// }\n\n// store\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n// connect app to store - provide store to the app / index.js\n\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","actions","store","reducer"],"sources":["/Users/pamelamladenova/Documents/19 - Redux/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true };\n\n// preparing slice of global state\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.value;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n//  returns an action object of this shape { type: 'INCREMENT', value: 1 }\ncounterSlice.actions.toggleCounter\n\n// create counter reducer\n// function counterReducer(state = initialState, action) {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE_COUNTER') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n\n//   return state;\n// }\n\n// store\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n} );\n\n// connect app to store - provide store to the app / index.js\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAEtD;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,IAAIS,MAAM,CAACC,KAAK;IAC/B,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACAC,YAAY,CAACU,OAAO,CAACD,aAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAME,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEZ,YAAY,CAACY;AACxB,CAAE,CAAC;;AAEH;;AAEA,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}